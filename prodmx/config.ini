[create_genome]
query = CREATE TABLE IF NOT EXISTS genome ( genome_id integer PRIMARY KEY, genome_acc text NOT NULL, unique (genome_acc) );
[create_protein]
query = CREATE TABLE IF NOT EXISTS protein ( protein_id integer PRIMARY KEY, protein_acc text NOT NULL, genome_id integer NOT NULL, unique (protein_acc), FOREIGN KEY (genome_id) REFERENCES genome (genome_id) );
[create_domain]
query = CREATE TABLE IF NOT EXISTS domain ( domain_id integer PRIMARY KEY, domain_acc text NOT NULL, unique (domain_acc) );
[create_protein_domain]
query = CREATE TABLE IF NOT EXISTS protein_domain ( protein_domain_id integer PRIMARY KEY, protein_id integer NOT NULL, domain_id integer NOT NULL, FOREIGN KEY (protein_id) REFERENCES protein (protein_id), FOREIGN KEY (domain_id) REFERENCES domain (domain_id) );
[insert_genome]
query = INSERT OR IGNORE INTO genome (genome_acc) VALUES (?);
[insert_protein]
query = INSERT OR IGNORE INTO protein (protein_acc, genome_id) VALUES (?,?);
[insert_domain]
query = INSERT OR IGNORE INTO domain (domain_acc) VALUES (?);
[insert_protein_domain]
query = INSERT INTO protein_domain (protein_id, domain_id) VALUES (?,?);
[select_domain_id]
query = SELECT domain_id FROM domain WHERE domain_acc = ?;
[select_domain_protein]
query = SELECT genome.genome_acc, domain.domain_acc, protein.protein_acc FROM genome JOIN protein ON protein.genome_id = genome.genome_id JOIN protein_domain ON protein.protein_id = protein_domain.protein_id JOIN domain ON domain.domain_id = protein_domain.domain_id WHERE genome.genome_acc = ? AND domain.domain_acc = ?;
