[create_genome]
query = CREATE TABLE IF NOT EXISTS genome ( genome_id integer PRIMARY KEY, genome_acc text NOT NULL, unique (genome_acc) );
[create_protein]
query = CREATE TABLE IF NOT EXISTS protein ( protein_id integer PRIMARY KEY, protein_acc text NOT NULL, genome_id integer NOT NULL, unique (protein_acc), FOREIGN KEY (genome_id) REFERENCES genome (genome_id) );
[create_model]
query = CREATE TABLE IF NOT EXISTS model ( model_id integer PRIMARY KEY, model_acc text NOT NULL, unique (model_acc) );
[create_protein_model]
query = CREATE TABLE IF NOT EXISTS protein_model ( protein_model_id integer PRIMARY KEY, protein_id integer NOT NULL, model_id integer NOT NULL, FOREIGN KEY (protein_id) REFERENCES protein (protein_id), FOREIGN KEY (model_id) REFERENCES model (model_id) );
[insert_genome]
query = INSERT OR IGNORE INTO genome (genome_acc) VALUES (?);
[insert_protein]
query = INSERT OR IGNORE INTO protein (protein_acc, genome_id) VALUES (?,?);
[insert_model]
query = INSERT OR IGNORE INTO model (model_acc) VALUES (?);
[insert_protein_model]
query = INSERT INTO protein_model (protein_id, model_id) VALUES (?,?);
[select_model_id]
query = SELECT model_id FROM model WHERE model_acc = ?;
[select_model_protein]
query = SELECT genome.genome_acc, model.model_acc, protein.protein_acc FROM genome JOIN protein ON protein.genome_id = genome.genome_id JOIN protein_model ON protein.protein_id = protein_model.protein_id JOIN model ON model.model_id = protein_model.model_id WHERE genome.genome_acc = ? AND model.model_acc = ?;
